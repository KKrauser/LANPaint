<Window x:Class="LANPaint.Views.Paint"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xceedwpftoolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:controls="clr-namespace:LANPaint.UserControls"
        xmlns:converters="clr-namespace:LANPaint.Converters"
        xmlns:xceedConverters="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit"
        WindowStartupLocation="CenterScreen"
        Title="LAN Paint" Width="970" Height="650" Icon="../Resources/pen.png">

    <Window.Resources>
        <converters:ThicknessConverter x:Key="ThicknessConverter"/>
        <converters:ColorBrushConverter x:Key="ColorBrushConverter"/>
        <xceedConverters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Content" Value="On"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="Off"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding UndoCommand}" Modifiers="Control" Key="Z"/>
        <KeyBinding Command="{Binding RedoCommand}" Modifiers="Control" Key="Y"/>
        <KeyBinding Command="{Binding SaveDrawingCommand}" Modifiers="Control" Key="S"/>
        <KeyBinding Command="{Binding OpenDrawingCommand}" Modifiers="Control" Key="O"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ToolBarTray Background="Transparent" HorizontalAlignment="Center">
            <ToolBar Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToolBarTray, AncestorLevel=1}}" UseLayoutRounding="True" Loaded="ToolBar_Loaded">
                <Button Command="{Binding OpenDrawingCommand}">
                    <Image Source="../Resources/open.png" Height="24"/>
                </Button>
                <Button Command="{Binding SaveDrawingCommand}">
                    <Image Source="../Resources/save.png" Height="24"/>
                </Button>
                <Separator Margin="5,0"/>
                <Label Content="Tool width:"/>
                <ComboBox Width="29" x:Name="ToolThickness" SelectedIndex="0">
                    <ComboBoxItem>2</ComboBoxItem>
                    <ComboBoxItem>4</ComboBoxItem>
                    <ComboBoxItem>8</ComboBoxItem>
                    <ComboBoxItem>12</ComboBoxItem>
                    <ComboBoxItem>16</ComboBoxItem>
                    <ComboBoxItem>20</ComboBoxItem>
                    <ComboBoxItem>24</ComboBoxItem>
                    <ComboBoxItem>28</ComboBoxItem>
                    <ComboBoxItem>32</ComboBoxItem>
                    <ComboBoxItem>36</ComboBoxItem>
                    <ComboBoxItem>40</ComboBoxItem>
                    <ComboBoxItem>45</ComboBoxItem>
                </ComboBox>
                <Label Content="Pen Color:"/>
                <xceedwpftoolkit:ColorPicker IsEnabled="{Binding IsEraser, Converter={StaticResource InverseBoolConverter}}" SelectedColor="Black" x:Name="PenColorPicker" MaxWidth="50"/>
                <Separator Margin="5,0"/>
                <Label Content="Background Color:"/>
                <xceedwpftoolkit:ColorPicker MaxWidth="50" SelectedColor="{Binding Background, Mode=TwoWay}"/>
                <Separator Margin="5,0"/>
                <Label Content="Tools:"/>
                <Button Command="{Binding ChoosePenCommand}">
                    <Image Height="24" Source="../Resources/pen.png"/>
                </Button>
                <Button Command="{Binding ChooseEraserCommand}">
                    <Image Height="24" Source="../Resources/eraser.png"/>
                </Button>
                <Separator Margin="5,0"/>
                <Label Content="Clear:"/>
                <Button Command="{Binding ClearCommand}">
                    <Image Height="24" Source="../Resources/cancel.png"/>
                </Button>
                <Separator Margin="5,0"/>
                <Label Content="Broadcast:"/>
                <CheckBox Width="23" Style="{DynamicResource CheckBoxStyle}" IsChecked="{Binding IsBroadcast, Mode=TwoWay}" Command="{Binding BroadcastChangedCommand}"/>
                <Separator Margin="5,0"/>
                <Label Content="Receive:"/>
                <CheckBox Width="23" Style="{DynamicResource CheckBoxStyle}" IsChecked="{Binding IsReceive, Mode=TwoWay}" Command="{Binding ReceiveChangedCommand}"/>
                <Separator Margin="5,0"/>
                <Button Command="{Binding SynchronizeCommand}">
                    <Image Height="24" Source="../Resources/synchronize.png"/>
                </Button>
                <Separator Margin="5,0"/>
                <Button Command="{Binding OpenSettingsCommand}">
                    <Image Height="24" Source="../Resources/settings.png"/>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <Border Grid.Row="1" BorderThickness="1" BorderBrush="Black">
            <controls:Board x:Name="DrawingBoard" StrokeThickness="{Binding ElementName=ToolThickness, Path=Text, Mode=TwoWay, Converter={StaticResource ThicknessConverter}}"
                     StrokeColor="{Binding ElementName=PenColorPicker, Path=SelectedColor, Mode=TwoWay}" 
                     Background="{Binding Background, Mode=TwoWay, Converter={StaticResource ColorBrushConverter}}"
                     IsEraser="{Binding IsEraser}"
                     Strokes="{Binding Strokes, Mode=TwoWay}"/>
        </Border>
        <StackPanel Grid.Row="2" DockPanel.Dock="Right" Orientation="Horizontal">
            <Label Content="Mouse:"/>
            <Label DockPanel.Dock="Left" Content="{Binding ElementName=DrawingBoard,Path=MousePosition, Mode=OneWay}"/>
        </StackPanel>
    </Grid>
</Window>
